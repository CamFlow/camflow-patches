version: 2.1
jobs:
  checkout:
    docker:
      - image: kernelci/build-gcc-8_x86:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - restore_cache:
         keys:
           - build-{{ checksum ".circleci/config.yml" }}
      - run:
          name: 'Prepare build environment...'
          command: |
            if [ -d "build/linux-stable" ]; then
              echo 'Build environment was cached.'
            else
              echo 'Build environment was not cached.'
              apt-get update -qq --allow-releaseinfo-change
              apt-get install -y sudo rpm cpio
              apt-get install -y uncrustify rsync build-essential ruby python autoconf automake libtool libncurses5-dev libncursesw5-dev bc libssl-dev pkg-config zsh libelf-dev bison flex sqlite3 libsqlite3-dev
              apt-get install --reinstall make
              cd ./v0.6.3
              make prepare
            fi
      - save_cache:
          key: build-{{ checksum ".circleci/config.yml" }}
          paths:
            - build
      - persist_to_workspace:
          root: ~/circulate
          paths:
            - .
  fedora_security:
    docker:
      - image: kernelci/build-gcc-8_x86:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get update -qq --allow-releaseinfo-change'
      - run: 'apt-get install -y sudo rpm cpio'
      - run: 'apt-get install -y build-essential rsync libtool libncurses5-dev libncursesw5-dev bc pkg-config zsh libelf-dev bison flex'
      - run: 'cd ./v0.6.3 && make config_circle_fedora'
      - run: 'cd ./v0.6.3 && make compile_security'
  fedora:
    docker:
      - image: kernelci/build-gcc-8_x86:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get update -qq --allow-releaseinfo-change'
      - run: 'apt-get install -y sudo rpm cpio'
      - run: 'apt-get install -y build-essential rsync libtool libncurses5-dev libncursesw5-dev bc pkg-config zsh libelf-dev bison flex'
      - run: 'cd ./v0.6.3 && make config_circle_fedora'
      - run:
          command: 'cd ./v0.6.3 && make rpm'
          no_output_timeout: '60m'
      - run: 'cd ./v0.6.3 && make move_rpm'
      - run: 'ls'
      - run: 'cd ~/circulate/v0.6.3  && ls'
      - run: 'cd ~/circulate/v0.6.3/output && ls'
      - persist_to_workspace:
          root: ~/circulate
          paths:
            - ./v0.6.3/output
  ubuntu_security:
    docker:
      - image: moul/kernel-builder:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get update -qq --allow-releaseinfo-change'
      - run: 'apt-get install -y software-properties-common python-software-properties'
      - run: 'add-apt-repository ppa:ubuntu-toolchain-r/test'
      - run: 'apt-get update -qq --allow-releaseinfo-change'
      - run: 'apt-get install -y build-essential'
      - run: 'apt-get install -y rpm libncurses-dev cmake clang wget git libssl-dev bc patch libedit-dev libelf-dev module-init-tools'
      - run: 'apt-get install -y gcc-7 g++-7'
      - run: 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 100 --slave /usr/bin/g++ g++ /usr/bin/g++-7'
      - run: 'apt-get install -y bison flex cpio'
      - run: 'cd ./v0.6.3 && make config_circle_ubuntu'
      - run: 'cd ./v0.6.3 && make compile_security'
  ubuntu:
    docker:
      - image: moul/kernel-builder:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get update -qq --allow-releaseinfo-change'
      - run: 'apt-get install -y software-properties-common python-software-properties'
      - run: 'add-apt-repository ppa:ubuntu-toolchain-r/test'
      - run: 'apt-get update -qq --allow-releaseinfo-change'
      - run: 'apt-get install -y build-essential'
      - run: 'apt-get install -y rpm libncurses-dev cmake clang wget git libssl-dev bc patch libedit-dev libelf-dev module-init-tools'
      - run: 'apt-get install -y gcc-7 g++-7'
      - run: 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 100 --slave /usr/bin/g++ g++ /usr/bin/g++-7'
      - run: 'apt-get install -y bison flex cpio'
      - run: 'cd ./v0.6.3 && make config_circle_ubuntu'
      - run:
          command: 'cd ./v0.6.3 && make deb'
          no_output_timeout: '90m'
      - run: 'cd ./v0.6.3 && make move_deb'
      - run: 'ls'
      - run: 'cd ~/circulate/v0.6.3 && ls'
      - run: 'cd ~/circulate/v0.6.3/output && ls'
      - persist_to_workspace:
          root: ~/circulate
          paths:
            - ./v0.6.3/output
  publish:
    docker:
      - image: kernelci/build-gcc-8_x86:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get update -qq --allow-releaseinfo-change'
      - run: 'apt-get install -y sudo rpm cpio'
      - run: 'apt-get install -y build-essential rsync libtool libncurses5-dev libncursesw5-dev bc pkg-config zsh libelf-dev bison flex'
      - run: 'apt-get install --reinstall make'
      - run: 'apt-get install -y ruby ruby-dev'
      - run: 'apt-get install -y rename'
      - run: 'gem install rake'
      - run: 'gem install package_cloud'
      - deploy:
          name: publish
          command:
              cd ./v0.6.3 && make publish
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - checkout
      - fedora_security:
          requires:
            - checkout
      - fedora:
          requires:
            - fedora_security
      - ubuntu_security:
          requires:
            - checkout
      - ubuntu:
          requires:
            - ubuntu_security
      - publish:
          filters:
            branches:
              only:
                - master
          requires:
            - fedora
            - ubuntu
