version: 2.1
jobs:
  checkout:
    docker:
      - image: kernelci/build-gcc-8_x86:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - restore_cache:
         keys:
           - build-{{ checksum ".circleci/config.yml" }}
      - run:
          name: 'Prepare build environment...'
          command: |
            if [ -d "build/linux-stable" ]; then
              echo 'Build environment was cached.'
            else
              echo 'Build environment was not cached.'
              apt-get update -qq --allow-releaseinfo-change
              apt-get install patch
              apt-get install --reinstall make
              make prepare
            fi
      - save_cache:
          key: build-again-{{ checksum ".circleci/config.yml" }}
          paths:
            - build
      - persist_to_workspace:
          root: ~/circulate
          paths:
            - .
  fedora_security:
    docker:
      - image: kernelci/build-gcc-8_x86:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get update -qq --allow-releaseinfo-change'
      - run: 'apt-get install -y sudo rpm cpio'
      - run: 'apt-get install -y build-essential rsync libtool libncurses5-dev libncursesw5-dev bc pkg-config zsh libelf-dev bison flex'
      - run: 'make config_circle_fedora'
      - run: 'make compile_security'
  fedora:
    docker:
      - image: kernelci/build-gcc-8_x86:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get update -qq --allow-releaseinfo-change'
      - run: 'apt-get install -y sudo rpm cpio'
      - run: 'apt-get install -y build-essential rsync libtool libncurses5-dev libncursesw5-dev bc pkg-config zsh libelf-dev bison flex'
      - run: 'make config_circle_fedora'
      - run:
          command: 'make rpm'
          no_output_timeout: '60m'
      - run: 'make move_rpm'
      - run: 'ls'
      - run: 'cd ~/circulate/  && ls'
      - run: 'cd ~/circulate/output && ls'
      - persist_to_workspace:
          root: ~/circulate
          paths:
            - ./output
  ubuntu_security:
    docker:
      - image: moul/kernel-builder:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get update -qq'
      - run: 'apt-get install -y software-properties-common python-software-properties'
      - run: 'add-apt-repository ppa:ubuntu-toolchain-r/test'
      - run: 'apt-get update -qq'
      - run: 'apt-get install -y build-essential'
      - run: 'apt-get install -y rpm libncurses-dev cmake clang wget git libssl-dev bc patch libedit-dev libelf-dev module-init-tools'
      - run: 'apt-get install -y gcc-8 g++-8'
      - run: 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100 --slave /usr/bin/g++ g++ /usr/bin/g++-8'
      - run: 'apt-get install -y bison flex cpio'
      - run: 'make config_circle_ubuntu'
      - run: 'make compile_security'
  ubuntu:
    docker:
      - image: moul/kernel-builder:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get update -qq'
      - run: 'apt-get install -y software-properties-common python-software-properties'
      - run: 'add-apt-repository ppa:ubuntu-toolchain-r/test'
      - run: 'apt-get update -qq'
      - run: 'apt-get install -y build-essential'
      - run: 'apt-get install -y rpm libncurses-dev cmake clang wget git libssl-dev bc patch libedit-dev libelf-dev module-init-tools'
      - run: 'apt-get install -y gcc-8 g++-8'
      - run: 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100 --slave /usr/bin/g++ g++ /usr/bin/g++-8'
      - run: 'apt-get install -y bison flex cpio'
      - run: 'make config_circle_ubuntu'
      - run:
          command: 'make deb'
          no_output_timeout: '90m'
      - run: 'make move_deb'
      - run: 'ls'
      - run: 'cd ~/circulate && ls'
      - run: 'cd ~/circulate/output && ls'
      - persist_to_workspace:
          root: ~/circulate
          paths:
            - ./output
  fedora_package:
    docker:
      - image: fedora:31
    working_directory: ~/circulate
    steps:
      - checkout
      - run: 'sudo dnf install -y make'
      - run: 'sudo dnf install -y fedpkg fedora-packager rpmdevtools ncurses-devel pesign grubby'
      - run:
          command: 'make fedora'
          no_output_timeout: '60m'
      - run:
          command: |
            mkdir -p /tmp/build-logs
            cat /root/circulate/build/kernel/.build-*.log > /tmp/build-logs/build.log
          when: always
      - run:
          command: 'df -h'
          when: always
      - store_artifacts:
          path: /tmp/build-logs
  publish:
    docker:
      - image: kernelci/build-gcc-8_x86:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get install --reinstall make'
      - run: 'apt-get install -y ruby ruby-dev'
      - run: 'apt-get install -y rename'
      - run: 'gem install rake'
      - run: 'gem install package_cloud'
      - deploy:
          name: publish
          command:
              make publish
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - checkout
      - fedora_package
      - fedora_security:
          requires:
            - checkout
      - fedora:
          requires:
            - fedora_security
      - ubuntu_security:
          requires:
            - checkout
      - ubuntu:
          requires:
            - ubuntu_security
      - publish:
          filters:
            branches:
              only:
                - master
          requires:
            - fedora
            - ubuntu
